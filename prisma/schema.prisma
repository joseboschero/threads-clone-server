generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id          Int         @id @default(autoincrement())
  username    String
  password    String
  email       String
  phoneNumber String?
  image_url   String?
  description String?
  socialUrl   String?
  verified    Boolean     @default(false)
  Followers   Follower[]
  Following   Following[]
  Reply       Reply[]
  Threads     Thread[]
}

model Follower {
  id     Int   @id @default(autoincrement())
  userId Int?
  User   User? @relation(fields: [userId], references: [id])
}

model Following {
  id     Int   @id @default(autoincrement())
  userId Int?
  User   User? @relation(fields: [userId], references: [id])
}

model Thread {
  id          Int      @id @default(autoincrement())
  description String
  media       String
  likes       Int
  userId      Int
  createdAt   DateTime
  state       Boolean
  Replies     Reply[]
  User        User     @relation(fields: [userId], references: [id])
}

model Reply {
  id           Int      @id @default(autoincrement())
  description  String
  likes        Int
  userId       Int?
  threadId     Int?
  parentId     Int?
  createdAt    DateTime
  state        Boolean
  ParentReply  Reply?   @relation("ChildReplies", fields: [parentId], references: [id])
  ChildReplies Reply[]  @relation("ChildReplies")
  Thread       Thread?  @relation(fields: [threadId], references: [id])
  User         User?    @relation(fields: [userId], references: [id])
}
